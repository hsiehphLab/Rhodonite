import os
import sys
import math
import pandas as pd
from snakemake.utils import min_version

min_version("6.0")

S_DIR = os.path.realpath(os.path.dirname(srcdir("Snakefile")))
shell.prefix(f"set -eo pipefail;")


TEMP_DIR = config.pop("tempdir", "temp")
if TEMP_DIR != "temp":
    if os.path.exists("temp"):
        if os.path.islink("temp") and os.path.realpath("temp") == os.path.realpath(
            TEMP_DIR
        ):
            print("The temp dir has already been linked.")
        else:
            sys.exit("temp/ already in use, please move it before running.")
    else:
        shell("ln -s {TEMP_DIR} temp")


try:
    [(sample, ref) for sample, ref in config["samples"].items()]
except:
    sys.stderr.write(
        f"""[ERROR]: "samples" must be configured as a dict of sample reference pairs in the yaml. e.g.

samples:
    test: ./test/test.fa
    test2: ./test/test2.fa
"""
    )
    sys.stderr.write("[ERROR]: {}\n".format(sys.exc_info()[0]))
    sys.exit(1)

n_records = config.pop("n_records", 40)
for sample, ref in config["samples"].items():
    try:
        df = pd.read_csv(f"{ref}.fai", sep="\t", header=None)
    except:
        sys.stderr.write(f"[ERROR]: {ref}.fai must exist and be readable!\n")
        sys.stderr.write("[ERROR]: {}\n".format(sys.exc_info()[0]))
        sys.exit(1)

    if df.shape[0] > 0 & df.shape[0] < n_records:
        n_records = df.shape[0]


scattergather:
    fasta=n_records,


# rules for each program
include: "rules/split.smk"
include: "rules/RepeatMasker.smk"
include: "rules/DupMasker.smk"
include: "rules/trf.smk"
include: "rules/windowmasker.smk"
include: "rules/gaps.smk"
